package com.wf.charpter16.book;

/**
 * @Author: wangfa
 * @Date: 2020/3/3 15:20
 * @Description: Mediator模式
 * 中介者模式------>只有一个仲裁者
 *
 * 一个乱糟糟的团队，相互指挥，意见难以统一，导致工作进度滞后，此时我们需要一个仲裁者,大家将情况告诉仲裁者，由仲裁者进行决定
 * 当出现争论，大家去找仲裁者进行商量，统一大家意见。结果是组员向仲裁者报告，仲裁者向组员下达指标。组员之间不再进行询问和指派。
 *
 *
 * mediator意思为仲裁者，中介者，
 * 一方面当发生麻烦的事情，通知仲裁者，当涉及到全员的事情时，也通知仲裁者，
 * 当仲裁者下达指标时，组员会立即执行，团队组员之间不再进行相互沟通交流，而且发生任何事情都向仲裁者报告。
 * 另一方面，仲裁者站在团队的角度对组员上报的事情做出决定。
 *
 * 在mediator模式中，仲裁者称为Mediator,各组员称为Colleague
 * 
 */
public class Main {
    /**
     * 模拟登陆页面
     * 1、选择游客登陆或者用户登陆
     * 2、用户登陆时需要输入正确的用户名和密码
     * 3、点击OK按钮进行登陆
     *
     * 选择游客登陆，禁止用户名和密码输入
     * 选择用户登陆，启用用户名和密码输入
     * 用户名未输入任何字符，密码无法进行输入
     * 用户名和密码均进行输入，ok按钮启用
     *
     * 类似这样的要调整多个对象之间的关系时，需要使用mediator模式，不让各个对象之间进行通信，增加一个仲裁者，让他们与仲裁者通信，
     * 将控制启用禁用的逻辑交给仲裁者类
     */

    public static void main(String[] args) {
        new LoginFrame("Mediator Simple");
    }
}
